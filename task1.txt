Задание 1
Ответить на вопросы:
Что такое тестирование программного обеспечения?
Что такое качество программного обеспечения?
Перечислите характеристики качества программного обеспечения и их атрибуты.
Когда начинать и заканчивать тестирование?
Какие знаете цели тестирования программного обеспечения?
Quality Assurance- это?
Quality Control - это?
Тестирование - это?
Какие знаете принципы тестирования?
Что такое верификация?
Что такое валидация?

Что такое тестирование ПО?

— это процесс проверки качества программного продукта с целью убедиться, что программа работает так, как ожидается, и соответствует заданным требованиям.

Что такое качество ПО?

- это насколько хорошо ПО выполняет свою задачу, насколько оно удобно в использовании, надежно и безопасно.

Атрибуты качества ПО — это набор характеристик, которые определяют его уровень качества. 

Основные характеристики качества ПО:

Функциональность: выполняет ли ПО поставленные задачи?
Надежность: какая вероятность, что ПО будет работать без сбоев?
Эффективность: насколько быстро и эффективно работает ПО?
Безопасность: насколько хорошо ПО защищено от несанкционированного доступа и злоупотреблений?
Удобство использования: насколько легко и понятно использовать ПО?
Портативность: насколько легко модифицировать и поддерживать ПО?
Сопровождаемость: насколько легко исправлять ошибки и добавлять новые функции в ПО?
Совместимость: насколько хорошо ПО работает с другими системами и программным обеспечением.




Когда начинать и заканчивать тестирование?

Тестирование начинается с начала разработки ПО и продолжается до тех пор, пока продукт не будет выпущен в производство. 
Точка остановки тестирования зависит от нескольких факторов:
Сроки, установленные заранее.
Выполнение всех предусмотренных тест-кейсов.
Достижение определенного уровня тестового покрытия.
Рекомендуется продолжать тестирование до тех пор, пока не будет достигнуто необходимое качество продукта.
Какие знаете цели тестирования ПО?


Цели тестирования сильно зависят от целей самого проекта. Но можно выделить основные общие цели:
Проверка, все ли указанные требования выполнены.
Проверка того, что все требования из ТЗ не только реализованы, но и работают правильно.
Достигнут определенный уровень качества объекта тестирования.
Если программа работает корректно и соответствует заданным критериям, то достигнут определенный уровень качества объекта тестирования.
Предотвращение дефектов.
Заранее протестировав тоже ТЗ, тестировщик может указать на потенциальные проблемы, которые могут появиться в результате разработки программы. А зная о таких проблемах заранее, можно избежать вполне реальных багов в будущем.
Обнаружение отказов и дефектов.
Поиск багов в ПО является неотъемлемой частью тестирования.
Предоставление заинтересованным лицам достаточной информации.
Мы можем показать текущее состояние продукта, выраженное в количестве багов, путем оформления баг-репортов. Заинтересованные лица (например, руководитель проекта) могут оценить текущие проблемы и принять решение о выпуске или не выпуске продукта.
Снижение уровня риска
Чем лучше тестирование, тем меньший риск пропуска критичных багов. А значит, что риск возникновения ненадлежащего качества ПО уменьшается.
Quality Assurance - это?
Обеспечение качества (QA) - это гарантия того, что все процессы и результаты работы отвечают определенным стандартам качества.
Этот процесс, направлен на предотвращение дефектов. (QA manager)
Quality Control - это?
Контроль качества (QC) –  это реактивный процесс, направленный на выявление дефектов и проверку соответствия стандартам качества. (QA lead) 
Тестирование - это?
Тестирование — это конкретная деятельность в рамках QC, ориентированная на проверку функциональности и поиск багов. (Тестер)




Какие принципы тестирования вы знаете?

Выделяют 7 основных принципов тестирования:


1. Тестирование демонстрирует наличие дефектов
2. Полное (исчерпывающее) тестирование невозможно
3. Раннее тестирование
4. Скопление (кластеризация) дефектов 
5. Парадокс пестицидов 
6. Тестирование зависит от контекста
7. Заблуждение об отсутствие ошибок

1. Тестирование демонстрирует наличие дефектов


Этот принцип говорит о том, что тестирование может доказать, что баги есть, но не может доказать, что их нет. 


Важно проверять основные и критически важные сценарии работы ПО на текущий момент времени и удостовериться, что основной функционал работает.

2. Полное (исчерпывающее) тестирование невозможно

Невозможно все проверить и все протестировать. Важно сосредоточиться на основной функциональности, описанной в требованиях и максимально проверить ее. 

Попытка провести исчерпывающее тестирование приведёт к потере времени и денег компании. Правильный путь — оптимизировать общее количество тестовых случаев, применяя различные стратегии тестирования. (Тест-дизайн)

3. Раннее тестирование

Этот принцип говорит о том, что тестирование как процесс должен начинаться как можно раньше, то есть с ранних этапов разработки ПО: на этапе идеи, на этапе требований, на этапе дизайна. Ведь ошибка, найденная на каждом из этих этапов будет существенно дешевле, чем ошибка, найденная, когда уже все эти этапы прошли.

 4. Скопление (кластеризация) дефектов
 
Этот принцип состоит в том, что 80% процентов багов находится в 20%  программы, т.е. получается, что баги “кучкуются”.

Этот принцип может помочь вашей команде сосредоточиться на приоритетной области, наиболее востребованной части ИТ-решения.

Однако у такого подхода есть свои недостатки. Если повторять одни и те же тесты и тестировать одни и те же модули снова и снова, то в итоге одинаковые тестовые сценарии перестанут находить новые ошибки.
 
5. Парадокс пестицидов  

Многократное применение одних и тех же пестицидов для выведения насекомых в сельском хозяйстве со временем приводит к выработке у насекомых устойчивости к веществу, что делает его неэффективным в борьбе с насекомыми. Это же применимо и к процессу тестирования ПО. 

Если проводить один и тот же набор повторяющихся тестов, то метод окажется бесполезным для обнаружения новых дефектов. Чтобы не столкнуться с этой проблемой, необходимо регулярно пересматривать и обновлять тестовые примеры, добавляя те, что смогут найти больше дефектов в софте.

6. Тестирование зависит от контекста

Все ИТ-решения разные. В зависимости от типа можно использовать различные подходы, методологии и виды тестирования. Как и в жизни, тестирование любой платёжной системы продуктового магазина в корни будет отличаться от тестирования банкомата или системы видеонаблюдения.

7. Заблуждение об отсутствии ошибок
 
Надо помнить такую аксиому – не существует какого-либо продукта без багов или ошибок.
Даже готовый и хорошо протестированный продукт может оказаться не идеален, так как под каждого человека индивидуально его не подстроить. 

Что такое верификация?

Верификация (verification) - это проверка того, что ПО соответствует требованиям (спецификациям), которые написал проджект менеджер.
Это процесс просмотра документации, дизайна, кода и программы для того, чтобы проверить, было ли ПО создано в соответствии с требованиями или нет. 
Основная цель процесса верификации – обеспечить качество приложения, дизайна, архитектуры и т.д. Процесс верификации включает в себя такие действия, как ревью, пошаговое руководство и инспекция. (Код не запускается)


Что такое валидация?

Валидация - это проверка того, что ПО соответствует потребностям и ожиданиям потребителя, требованиям к системе. (Код запускается)
Этот процесс помогает гарантировать, что ПО выполняет желаемое использование в подходящей среде. Процесс валидации включает в себя такие действия, как модульное тестирование, интеграционное тестирование, системное тестирование и пользовательское приемочное тестирование.
