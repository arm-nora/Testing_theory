Задание 5
Ответить на вопросы:
Что такое Тест план?
Что должен описывать тест план?
Какие вы знаете Виды тест планов?
Что такое Чек лист?
Перечислите возможные атрибуты Чек листа
Перечислите варианты статусов при прохождении Чек листа
Что такое Тест кейс?
Перечислите атрибуты Тест кейса?
Перечислите виды Тест кейсов?
Что такое Тестовый набор (Test Suite)?
Что такое Баг репорт?
Какое нужно соблюдать правило в баг репорте для хорошего Summary?
Перечислите атрибуты Баг репорта?
Опишите Жизненный цикл бага
Что такое Priority?
Перечислите классификации Priority
Что такое Severity?
Перечислите классификации  Severity
Приведите пример Низкого Priority и Высокого Severity
Приведите пример Низкого Severity и Высокого Priority
Что такое Матрица соответствия требований (Requirements Traceability Matrix)?
Что такое Тест-отчет?
По времени Тест отчет на сколько типов возможно разделить?
Что должен показывать Промежуточный отчет?
Что должен показывать Итоговый отчет?

Что такое Тест план?

Тест-план — это документ, описывающий все работы по тестированию ПО. В нем описываются цели, стратегии, расписание, критерии начала и окончания тестирования.

Что должен описывать тест план?
Описание объекта тестирования (что именно вы будете тестировать).
Стратегию тестирования (какие типы тестирования будут использоваться).
Расписание тестирования (когда и сколько времени будет отведено на тестирование).
Критерии начала и завершения тестирования (когда можно начинать и заканчивать тестирование).
Ресурсы (люди и инструменты, которые будут использоваться).
Риски (возможные проблемы, которые могут возникнуть во время тестирования).
Критерии приемки (что должно быть проверено, чтобы считать продукт готовым к релизу).

Виды тест планов

Мастер тест план -  это комплексный план тестирования. В нем содержится высокоуровневая информация, которая не часто меняется в ходе тестирования.

Тест план (Test Plan), или детальный тест план - составляется на каждый релиз/итерацию или для каждой команды в рамках проекта и является динамическим, т.е. может претерпевать изменения по необходимости. 
Его основная цель - кратко и доходчиво отразить задачи тестирования. 
План приемочных испытаний — документ, описывающий набор действий, связанных с приемочным тестированием (стратегия, дата проведения, ответственные работники и т.д.) Пишется на основе бизнес-требований.


Что такое чек-лист?

- это список проверок, которые необходимо провести для тестирования приложения или его части. 

Виды чек-листов:

специальные - создаются для конкретного проекта и отражают его специфику.
универсальные - подходят для тестирования проектов одного типа, проверки в них не привязываются к графическим элементам или конкретной реализации.



Возможные атрибуты чек-листа:


Шапка:  название приложения, его версии, окружении, на котором проводится тестирование (версия ОС, браузера, эмулятора), ответственного за тестирование, дату тестирования 
Тестируемые модули, субмодули: например, регистрация, аутентификация авторизация
Уникальный идентификатор проверок (айдишник)
Список проверок: они должны отражать основную суть, без лишней детализации
Ожидаемый результат:  то, что мы ожидаем увидеть после запуска проверки согласно требованиям
Статус: информация о статусе прохождения проверки:
Passed (Пройден) — проверка прошла успешно. Используется, когда тест полностью соответствует ожидаемым результатам.
Failed (Провален) — проверка провалилась. Это значит, что обнаружены несоответствия между фактическим результатом и ожидаемым.
Blocked (Заблокирован) — тест не может быть выполнен из-за каких-то внешних причин. Например, недостаток данных, сбои в системе или зависимость от другой задачи, которая не завершена.
Skipped (Пропущен) — тест был намеренно пропущен. Может быть, проверка нерелевантна для текущей версии, задачи или её выполнение не требуется.
Not Run (Не выполнен) — тест ещё не был выполнен. Этот статус ставится до того, как проверка началась.
N/A (Not Applicable, не применимо) означает, что проверка или тест не относится к текущему контексту, сценарию или продукту. 
Заметки: если нужно добавить комментарии

Что такое Тест кейс?

это документ, описывающий набор условий, входных данных и шагов для тестирования конкретной функции или компонента системы

Виды тест-кейсов:

Позитивный - проверяет отсутствие сообщений об ошибке там, где это не предусмотрено, и исполнение системой позитивного сценария нормального использования ПО.
Негативный - определяет поведение системы при получении некорректных входных данных. В этом случае система не проигрывает позитивный сценарий, то есть не делает того, что не предусмотрено.
Деструктивный - проверяет систему на прочность (в экстремальных условиях).
Атрибуты тест-кейса

ID
Заголовок — краткое описание идеи и сути тест-кейса.
Предусловия 
Шаги
Постусловия — описание возврата системы в исходное состояние (если необходимо). Например, инструкции по удалению внесенных данных по окончании тестирования во избежание переполнения базы.
Ожидаемый результат
Фактический результат 
Статус — один из принятых в команде вариантов оценки тестирования: success (успех), failed (провал), blocked (блокировка).
Что такое тестовый набор?
это коллекция тест-кейсов, которые используются для проверки функциональности приложения или его части. 
Типы тестовых наборов, в зависимости от целей тестирования и подходов к нему:
Функциональные тестовые наборы: Содержат тестовые случаи для проверки функциональности приложения, чтобы убедиться, что оно выполняет заявленные требования.
Нефункциональные тестовые наборы: Ориентированы на проверку нефункциональных аспектов, таких как производительность, безопасность, удобство использования и совместимость.
Регрессионные тестовые наборы: Содержат тестовые случаи, которые повторно проверяют уже проверенные функциональные возможности после внесения изменений в код, чтобы убедиться, что изменения не повлияли на существующий функционал.
Тестовые наборы для системной интеграции: Используются для проверки взаимодействия между различными компонентами системы или внешними системами.
Тестовые наборы для приемочного тестирования (UAT): Создаются для конечных пользователей и предназначены для проверки, соответствует ли приложение их требованиям и ожиданиям.
Модульные тестовые наборы: Содержат тесты для отдельных модулей или компонентов системы, обычно проводятся разработчиками.
Тестовые наборы для нагрузочного тестирования: Ориентированы на проверку того, как система ведет себя под нагрузкой, включая производительность при высоком уровне использования.
Что такое Баг репорт?

Это документ, в котором описывается ошибка, найденная в ПО.
Какое нужно соблюдать правило в БР 
для хорошего Summary?

Summary должен быть кратким, точным и информативным. Он должен четко описать проблему, не вдаваясь в подробности и отвечать на вопросы: Что? Где? Когда?

Атрибуты баг-репорта:
ID
Priority (Приоритет): Уровень срочности исправления.
Severity (Серьезность): Влияние ошибки на работу ПО.
Environment (Среда): Версия ПО, операционная система, браузер и т.д.
Summary (Краткое описание): Краткое описание ошибки.
Steps to reproduce (Шаги воспроизведения): Последовательность действий, чтобы воспроизвести ошибку.
Expected result (Ожидаемый результат): То, что должно произойти.
Actual result (Фактический результат): То, что происходит на самом деле.
Attachment (Вложения): Скриншоты, логи, видеозаписи.
Status (Статус): Текущий этап обработки бага.
Assignee (Ответственный): Человек, назначенный для решения бага.
Опишите Жизненный цикл бага

Открытие (Open): Баг обнаружен и зарегистрирован.
Назначен (Assigned): Баг назначен разработчику.
В работе (In Progress): Разработчик работает над исправлением.
Проверен (Verified): Разработчик исправил баг, и тестировщик проверил его.
Переоткрыт (Reopened): Баг снова обнаружен.
Закрыт (Closed): Баг исправлен и закрыт.
Что такое Priority (Приоритет)?

это уровень срочности исправления бага.
Классификации Priority:
Высокий (High): Критическая ошибка, блокирующая дальнейшую работу.
Средний (Medium): Ошибка, требующая исправления, но не блокирующая работу.
Низкий (Low): Ошибка, которая может быть исправлена позже.
Что такое Severity (Серьезность)?

это влияние ошибки на работу ПО.
Классификации Severity:
Критический (Critical): Ошибка, которая приводит к сбою системы.
Серьезный (Major): Ошибка, которая приводит к нарушению функциональности.
Менее серьезный (Minor): Ошибка, которая не влияет на основные функции, но является раздражающей.
Тривиальный (Trivial): Ошибка, которая не влияет на функциональность и не является раздражающей.
Приведите пример Низкого Priority и Высокого Severity

Ошибка в UI, которая не блокирует работу, но делает интерфейс неудобным.
Приведите пример Низкого Severity и Высокого Priority

Ошибка, которая не блокирует работу, но может привести к утечке данных.
Что такое Матрица соответствия требований (Requirements Traceability Matrix)?

это таблица, которая сопоставляет тестовые случаи с требованиями к ПО.
Она позволяет убедиться, что все требования учтены, разработаны и протестированы, и что ничего не пропущено. 
Трассируемость -  это способность отслеживать связи между различными элементами проекта, особенно связанными с требованиями. Она позволяет проследить путь от первоначальной идеи до окончательной реализации.
Например, в этой таблице можно связать функциональные требования к конкретным программным модулям или тест-кейсам.
Что такое Тест-отчет?

это документ, который содержит результаты тестирования.
Типы тест-отчетов по времени:
Промежуточный (Interim): Отчет, который предоставляется периодически во время тестирования.
Итоговый (Final): Отчет, который предоставляется после завершения тестирования.
Что должен показывать Промежуточный отчет?

Он должен показывать прогресс тестирования, найденные баги, покрытие тестовых случаев.
Что должен показывать Итоговый отчет?

Должен показывать результаты тестирования, количество найденных багов, их приоритет и серьезность, покрытие тестовых случаев.
